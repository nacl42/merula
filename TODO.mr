#
# TODO file for merula
#

@mr:filter active
.mql status=active

@mr:filter done
.mql status=done


@TODO filter by node type
.doc<<EOF
- filter by collection: ```@app```
- filter by data node: ```.url```
EOF

@TODO allow to load multiple .mr files
.status active
.doc<<EOF
Useful for having a master file and a custom data file.
Useful for having a schema file and a data file.

Should common nodes be merged?
EOF

@TODO shorthand notation for attributes
.doc<<EOF
Example:
 .discovery Cavendish {+date 1786}
 .saturation 2.35 {+unit T}
 .density 2.01 {+unit g/cmÂ³m} {+state "liquid, at room temperature"}

prerequisite for this is that the value is parsed by the regular parser!
EOF

@TODO add some proper tests in the source code

@TODO extend equal comparison to perform type conversion
.tag mql
.doc<<EOF
allow equals operator (=) for numbers as well
maybe move functions such as equals, less_than, greater_than
part of Value and have two different versions (strict with
type checking or non-strict with type conversion)
EOF

@TODO node index
.tag mql
.doc allow node index "email[0]"

@TODO date comparison operators (<<, >>, ==)
.tag mql
.doc date comparison: before (<<), after (>>), same time (==)

@TODO command line option for limiting result nodes
.doc<<EOF
command line option -p for selecting nodes
 -p element,amu => only print out nodes with key element or amu
EOF

@TODO implement schema
.doc<<EOF
define schema and transform values of new Memos by applying
transformation functions
EOF

@TODO apply text template
.short transform result set by applying a template to each resulting Memo
.doc<<EOF
implementation ideas:
- tera
- custom template engine (after all, where's the fun in using an
  existing template engine?)
EOF


@TODO list available keys
.doc list all available keys for a result set (--keys)

@TODO add ROADMAP file
.doc add ROADMAP.md file

@TODO print attributes
.doc write attributes when using -vv in list output


#
# --- finished tasks ---
#

@TODO add colour to output
.status done
.finished 2021-01-24
.doc<<EOF
add coloring of ouput
header nodes and data nodes full of colour
EOF

@TODO implement quoted values
.status done
.finished 2021-01-25
.tag mql
.doc allow quotes around filter values "description ~ 'the book'"

@TODO allow to specify multiple conditions
.status done
.finished 2021-01-29
.tag mql
.doc<<EOF
But which notation would be best?
  'amu>5,amu<20'
  'amu>5 || amu >3'
  'amu>5 && ferromagnetic=true'
EOF

@TODO define mql filter in a memo
.status done
.finished 2021-01-30
.doc<<EOF
move filter into a Memo, so that we can apply it
  by selecting the filter:

  @mr:filter sample
  .doc sample filter
  .mql number<5

FIRST switch command line option --filter to --mql
SECOND use command line option --filter to specify mr:filter

EOF

@TODO include other .mr files from within a .mr file
.status active
.doc<<EOF
include other .mr files with special command

@mr:include filter_periodic.mr

uses the path relative to the .mr file
must check for cyclic dependencies!!!
EOF
