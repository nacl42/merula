#
# TODO file for merula
#

@TODO extend equal comparison to perform type conversion
.tag mql
.doc<<EOF
allow equals operator (=) for numbers as well
maybe move functions such as equals, less_than, greater_than
part of Value and have two different versions (strict with
type checking or non-strict with type conversion)
EOF

@TODO allow to specify multiple conditions
.tag mql
.doc<<EOF
But which notation would be best?
  'amu>5,amu<20'
  'amu>5 || amu >3'
  'amu>5 && ferromagnetic=true'
EOF

@TODO node index
.tag mql
.doc allow node index "email[0]"

@TODO date comparison operators (<<, >>, ==)
.tag mql
.doc date comparison: before (<<), after (>>), same time (==)

@TODO command line option for limiting result nodes
.doc<<EOF
command line option -p for selecting nodes
 -p element,amu => only print out nodes with key element or amu
EOF

@TODO implement schema
.doc<<EOF
define schema and transform values of new Memos by applying
transformation functions
EOF

@TODO apply text template
.short transform result set by applying a template to each resulting Memo
.doc<<EOF
implementation ideas:
- tera
- custom template engine (after all, where's the fun in using an
  existing template engine?)
EOF


@TODO list available keys
.doc list all available keys for a result set (--keys)

@TODO filter by collection
.doc filter by collection ("@app")

@TODO filter by data node
.doc filter by data node (".url")

@TODO define mql filter in a memo
.doc<<EOF
move filter into a Memo, so that we can apply it
  by selecting the filter:

  @mr:filter sample
  .doc sample filter
  .mql number<5

EOF

@TODO add ROADMAP file
.doc add ROADMAP.md file

@TODO print attributes
.doc write attributes when using -vv in list output

#
# --- finished tasks ---
#

@TODO add colour to output
.status done
.finished 2021-01-24
.doc<<EOF
add coloring of ouput
header nodes and data nodes full of colour
EOF

@TODO implement quoted values
.status done
.finished 2021-01-25
.tag mql
.doc allow quotes around filter values "description ~ 'the book'"
